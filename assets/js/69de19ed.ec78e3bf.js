"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[17366],{19822:function(i){i.exports=JSON.parse('{"pluginId":"wallet-rs","version":"current","label":"IOTA","banner":null,"badge":true,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Welcome","href":"/wallet.rs/welcome","docId":"welcome"},{"type":"link","label":"Overview","href":"/wallet.rs/overview","docId":"overview"},{"type":"category","label":"Libraries","collapsed":false,"items":[{"type":"link","label":"Overview","href":"/wallet.rs/libraries/overview","docId":"libraries/overview"},{"type":"category","label":"Rust","items":[{"type":"link","label":"Getting Started","href":"/wallet.rs/libraries/rust/getting_started","docId":"libraries/rust/getting_started"},{"type":"link","label":"Examples","href":"/wallet.rs/libraries/rust/examples","docId":"libraries/rust/examples"},{"type":"link","label":"API Reference","href":"/wallet.rs/libraries/rust/api_reference","docId":"libraries/rust/api_reference"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Node.js","items":[{"type":"link","label":"Getting Started","href":"/wallet.rs/libraries/nodejs/getting_started","docId":"libraries/nodejs/getting_started"},{"type":"link","label":"Examples","href":"/wallet.rs/libraries/nodejs/examples","docId":"libraries/nodejs/examples"},{"type":"link","label":"API Reference","href":"/wallet.rs/libraries/nodejs/api_reference","docId":"libraries/nodejs/api_reference"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Python","items":[{"type":"link","label":"Getting Started","href":"/wallet.rs/libraries/python/getting_started","docId":"libraries/python/getting_started"},{"type":"link","label":"Examples","href":"/wallet.rs/libraries/python/examples","docId":"libraries/python/examples"},{"type":"link","label":"API Reference","href":"/wallet.rs/libraries/python/api_reference","docId":"libraries/python/api_reference"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Java","items":[{"type":"link","label":"Getting Started","href":"/wallet.rs/libraries/java/getting_started","docId":"libraries/java/getting_started"},{"type":"link","label":"Android","href":"/wallet.rs/libraries/java/android_development","docId":"libraries/java/android_development"},{"type":"link","label":"Examples","href":"/wallet.rs/libraries/java/examples","docId":"libraries/java/examples"},{"type":"link","label":"API Reference","href":"/wallet.rs/libraries/java/api_reference","docId":"libraries/java/api_reference"}],"collapsed":true,"collapsible":true}],"collapsible":true},{"type":"link","label":"Specification","href":"/wallet.rs/specification","docId":"specification"},{"type":"link","label":"Troubleshooting","href":"/wallet.rs/troubleshooting","docId":"troubleshooting"},{"type":"link","label":"Contribute","href":"/wallet.rs/contribute","docId":"contribute"}]},"docs":{"contribute":{"id":"contribute","title":"Contribute to the Project","description":"Contribute to the IOTA Wallet Library joining the IOTA Libraries Initiative, contributing to the official GitHub repository, or sharing your knowledge on Discord.","sidebar":"docs"},"libraries/java/android_development":{"id":"libraries/java/android_development","title":"Android development","description":"Official IOTA Wallet Library Java API reference.","sidebar":"docs"},"libraries/java/api_reference":{"id":"libraries/java/api_reference","title":"API Reference","description":"Official IOTA Wallet Library Java API reference.","sidebar":"docs"},"libraries/java/api/Account":{"id":"libraries/java/api/Account","title":"Account","description":"consolidateOutputs(includedustallowance_outputs): Message[]"},"libraries/java/api/AccountBalance":{"id":"libraries/java/api/AccountBalance","title":"AccountBalance","description":"Account balance information."},"libraries/java/api/AccountInitialiser":{"id":"libraries/java/api/AccountInitialiser","title":"AccountInitialiser","description":"signerType(signer_type): AccountInitialiser"},"libraries/java/api/AccountManager":{"id":"libraries/java/api/AccountManager","title":"AccountManager","description":"The account manager."},"libraries/java/api/AccountManagerBuilder":{"id":"libraries/java/api/AccountManagerBuilder","title":"AccountManagerBuilder","description":"Account manager builder."},"libraries/java/api/AccountSignerType":{"id":"libraries/java/api/AccountSignerType","title":"AccountSignerType","description":"STRONGHOLD"},"libraries/java/api/AccountsSynchronizer":{"id":"libraries/java/api/AccountsSynchronizer","title":"AccountsSynchronizer","description":"The accounts synchronizer."},"libraries/java/api/AccountSynchronizer":{"id":"libraries/java/api/AccountSynchronizer","title":"AccountSynchronizer","description":"Account sync helper."},"libraries/java/api/Actor":{"id":"libraries/java/api/Actor","title":"Actor","description":"iotaInitialize(cb, actorid, storagepath): void"},"libraries/java/api/ActorCallback":{"id":"libraries/java/api/ActorCallback","title":"ActorCallback","description":"onEvent(event): void"},"libraries/java/api/Address":{"id":"libraries/java/api/Address","title":"Address","description":"An address."},"libraries/java/api/AddressBuilder":{"id":"libraries/java/api/AddressBuilder","title":"AddressBuilder","description":"address(address): AddressBuilder"},"libraries/java/api/AddressConsolidationNeededEvent":{"id":"libraries/java/api/AddressConsolidationNeededEvent","title":"AddressConsolidationNeededEvent","description":"The address consolidation needed data."},"libraries/java/api/AddressConsolidationNeededListener":{"id":"libraries/java/api/AddressConsolidationNeededListener","title":"AddressConsolidationNeededListener","description":"onAddressConsolidationNeeded(event): void"},"libraries/java/api/AddressData":{"id":"libraries/java/api/AddressData","title":"AddressData","description":"Address data for TransferProgressType.GeneratingRemainderDepositAddress and LedgerAddressGeneration."},"libraries/java/api/AddressOutput":{"id":"libraries/java/api/AddressOutput","title":"AddressOutput","description":"An Address output."},"libraries/java/api/AddressWrapper":{"id":"libraries/java/api/AddressWrapper","title":"AddressWrapper","description":"from(address, bech32_hrp): AddressWrapper"},"libraries/java/api/Api":{"id":"libraries/java/api/Api","title":"Api","description":"GET_TIPS"},"libraries/java/api/BalanceChange":{"id":"libraries/java/api/BalanceChange","title":"BalanceChange","description":"The balance change event payload."},"libraries/java/api/BalanceChangeListener":{"id":"libraries/java/api/BalanceChangeListener","title":"BalanceChangeListener","description":"onBalanceChange(event): void"},"libraries/java/api/BalanceEvent":{"id":"libraries/java/api/BalanceEvent","title":"BalanceEvent","description":"The balance change event data."},"libraries/java/api/BroadcastingBundle":{"id":"libraries/java/api/BroadcastingBundle","title":"BroadcastingBundle","description":"Broadcasting the given bundle hash."},"libraries/java/api/BroadcastTransactionListener":{"id":"libraries/java/api/BroadcastTransactionListener","title":"BroadcastTransactionListener","description":"onBroadcastTransaction(event): void"},"libraries/java/api/BrokerOptions":{"id":"libraries/java/api/BrokerOptions","title":"BrokerOptions","description":"The MQTT broker options."},"libraries/java/api/ClientOptions":{"id":"libraries/java/api/ClientOptions","title":"ClientOptions","description":"The client options type."},"libraries/java/api/ClientOptionsBuilder":{"id":"libraries/java/api/ClientOptionsBuilder","title":"ClientOptionsBuilder","description":"The options builder for a client connected to multiple nodes."},"libraries/java/api/ErrorListener":{"id":"libraries/java/api/ErrorListener","title":"ErrorListener","description":"onError(error): void"},"libraries/java/api/Essence":{"id":"libraries/java/api/Essence","title":"Essence","description":"asRegular(): RegularEssence"},"libraries/java/api/EventId":{"id":"libraries/java/api/EventId","title":"EventId","description":"The event identifier type."},"libraries/java/api/EventManager":{"id":"libraries/java/api/EventManager","title":"EventManager","description":"subscribeErrors(cb): EventId"},"libraries/java/api/EventType":{"id":"libraries/java/api/EventType","title":"EventType","description":"ERROR_THROWN"},"libraries/java/api/FetchingMigrationData":{"id":"libraries/java/api/FetchingMigrationData","title":"FetchingMigrationData","description":"Fetching migration data on the given address range."},"libraries/java/api/IndexationPayload":{"id":"libraries/java/api/IndexationPayload","title":"IndexationPayload","description":"fromBytes(index, data): IndexationPayload"},"libraries/java/api/InfoResponse":{"id":"libraries/java/api/InfoResponse","title":"InfoResponse","description":"Response of GET /api/v1/info."},"libraries/java/api/InputData":{"id":"libraries/java/api/InputData","title":"InputData","description":"Address can be used as input to spend balance"},"libraries/java/api/InputKind":{"id":"libraries/java/api/InputKind","title":"InputKind","description":"UTXO"},"libraries/java/api/Message":{"id":"libraries/java/api/Message","title":"Message","description":"id(): MessageId"},"libraries/java/api/MessageId":{"id":"libraries/java/api/MessageId","title":"MessageId","description":"MessageId(): MessageId"},"libraries/java/api/MessagePayload":{"id":"libraries/java/api/MessagePayload","title":"MessagePayload","description":"Message payload wrapper"},"libraries/java/api/MessagePayloadType":{"id":"libraries/java/api/MessagePayloadType","title":"MessagePayloadType","description":"TRANSACTION"},"libraries/java/api/MessageType":{"id":"libraries/java/api/MessageType","title":"MessageType","description":"RECEIVED"},"libraries/java/api/MigratedFundsEntry":{"id":"libraries/java/api/MigratedFundsEntry","title":"MigratedFundsEntry","description":"tailTransactionHash(): String"},"libraries/java/api/MigrationAddress":{"id":"libraries/java/api/MigrationAddress","title":"MigrationAddress","description":"Migration address"},"libraries/java/api/MigrationBundle":{"id":"libraries/java/api/MigrationBundle","title":"MigrationBundle","description":"Migration bundle."},"libraries/java/api/MigrationBundleOptions":{"id":"libraries/java/api/MigrationBundleOptions","title":"MigrationBundleOptions","description":"Finds account data for the migration from legacy network."},"libraries/java/api/MigrationData":{"id":"libraries/java/api/MigrationData","title":"MigrationData","description":"Migration data."},"libraries/java/api/MigrationProgressEvent":{"id":"libraries/java/api/MigrationProgressEvent","title":"MigrationProgressEvent","description":"Type container for handling the different Migration events."},"libraries/java/api/MigrationProgressListener":{"id":"libraries/java/api/MigrationProgressListener","title":"MigrationProgressListener","description":"onMigrationProgress(event): void"},"libraries/java/api/MigrationProgressType":{"id":"libraries/java/api/MigrationProgressType","title":"MigrationProgressType","description":"Migration event type."},"libraries/java/api/MilestoneId":{"id":"libraries/java/api/MilestoneId","title":"MilestoneId","description":"fromString(str_rep): MilestoneId"},"libraries/java/api/MilestonePayload":{"id":"libraries/java/api/MilestonePayload","title":"MilestonePayload","description":"A payload which defines the inclusion set of other messages in the Tangle."},"libraries/java/api/MilestonePayloadEssence":{"id":"libraries/java/api/MilestonePayloadEssence","title":"MilestonePayloadEssence","description":"index(): long"},"libraries/java/api/MilestoneSignature":{"id":"libraries/java/api/MilestoneSignature","title":"MilestoneSignature","description":"getSignature(): byte[]"},"libraries/java/api/MiningBundle":{"id":"libraries/java/api/MiningBundle","title":"MiningBundle","description":"Mining the bundle with the given spent address."},"libraries/java/api/NativeAPI":{"id":"libraries/java/api/NativeAPI","title":"NativeAPI","description":"The NativeAPI class, which houses all entrypoints to the shared library."},"libraries/java/api/NewTransactionListener":{"id":"libraries/java/api/NewTransactionListener","title":"NewTransactionListener","description":"onNewTransaction(event): void"},"libraries/java/api/NodeInfoWrapper":{"id":"libraries/java/api/NodeInfoWrapper","title":"NodeInfoWrapper","description":"url(): String"},"libraries/java/api/OutputKind":{"id":"libraries/java/api/OutputKind","title":"OutputKind","description":"NONE"},"libraries/java/api/PreparedTransactionData":{"id":"libraries/java/api/PreparedTransactionData","title":"PreparedTransactionData","description":"Prepared transaction event data."},"libraries/java/api/PublicKey":{"id":"libraries/java/api/PublicKey","title":"PublicKey","description":"verify(sig, msg): boolean"},"libraries/java/api/ReattachTransactionListener":{"id":"libraries/java/api/ReattachTransactionListener","title":"ReattachTransactionListener","description":"onReattachTransaction(event): void"},"libraries/java/api/ReceiptPayload":{"id":"libraries/java/api/ReceiptPayload","title":"ReceiptPayload","description":"migratedAt(): long"},"libraries/java/api/ReferenceUnlock":{"id":"libraries/java/api/ReferenceUnlock","title":"ReferenceUnlock","description":"from(index): ReferenceUnlock"},"libraries/java/api/RegularEssence":{"id":"libraries/java/api/RegularEssence","title":"RegularEssence","description":"inputs(): TransactionInput[]"},"libraries/java/api/RemainderValueStrategy":{"id":"libraries/java/api/RemainderValueStrategy","title":"RemainderValueStrategy","description":"REUSE_ADDRESS"},"libraries/java/api/RustHex":{"id":"libraries/java/api/RustHex","title":"RustHex","description":"encode(a0): String"},"libraries/java/api/RustLogging":{"id":"libraries/java/api/RustLogging","title":"RustLogging","description":"init(): void"},"libraries/java/api/Signature":{"id":"libraries/java/api/Signature","title":"Signature","description":"toBytes(): byte[]"},"libraries/java/api/SignatureLockedDustAllowanceOutput":{"id":"libraries/java/api/SignatureLockedDustAllowanceOutput","title":"SignatureLockedDustAllowanceOutput","description":"Output type for deposits that enables an address to receive dust outputs. It can be consumed as an input like a"},"libraries/java/api/SignatureLockedSingleOutput":{"id":"libraries/java/api/SignatureLockedSingleOutput","title":"SignatureLockedSingleOutput","description":"Describes a deposit to a single address which is unlocked via a signature."},"libraries/java/api/SignatureUnlock":{"id":"libraries/java/api/SignatureUnlock","title":"SignatureUnlock","description":"SignatureUnlock(public_key, signature): SignatureUnlock"},"libraries/java/api/SigningBundle":{"id":"libraries/java/api/SigningBundle","title":"SigningBundle","description":"Signing the bundle."},"libraries/java/api/StrongholdStatusEvent":{"id":"libraries/java/api/StrongholdStatusEvent","title":"StrongholdStatusEvent","description":"snapshotPath(): Path"},"libraries/java/api/StrongholdStatusListener":{"id":"libraries/java/api/StrongholdStatusListener","title":"StrongholdStatusListener","description":"onStrongholdStatusChange(event): void"},"libraries/java/api/StrongholdStatusType":{"id":"libraries/java/api/StrongholdStatusType","title":"StrongholdStatusType","description":"UNLOCKED"},"libraries/java/api/SyncedAccount":{"id":"libraries/java/api/SyncedAccount","title":"SyncedAccount","description":"deposit_address(): Address"},"libraries/java/api/TransactionConfirmationChangeEvent":{"id":"libraries/java/api/TransactionConfirmationChangeEvent","title":"TransactionConfirmationChangeEvent","description":"A transaction confirmation state change event data."},"libraries/java/api/TransactionConfirmationChangeListener":{"id":"libraries/java/api/TransactionConfirmationChangeListener","title":"TransactionConfirmationChangeListener","description":"onConfirmationStateChange(event): void"},"libraries/java/api/TransactionConfirmed":{"id":"libraries/java/api/TransactionConfirmed","title":"TransactionConfirmed","description":"Transaction confirmation event."},"libraries/java/api/TransactionEvent":{"id":"libraries/java/api/TransactionEvent","title":"TransactionEvent","description":"A transaction-related event data."},"libraries/java/api/TransactionId":{"id":"libraries/java/api/TransactionId","title":"TransactionId","description":"fromString(str_rep): TransactionId"},"libraries/java/api/TransactionInput":{"id":"libraries/java/api/TransactionInput","title":"TransactionInput","description":"kind(): InputKind"},"libraries/java/api/TransactionIO":{"id":"libraries/java/api/TransactionIO","title":"TransactionIO","description":"Input or output data for PreparedTransactionData"},"libraries/java/api/TransactionOutput":{"id":"libraries/java/api/TransactionOutput","title":"TransactionOutput","description":"kind(): OutputKind"},"libraries/java/api/TransactionPayload":{"id":"libraries/java/api/TransactionPayload","title":"TransactionPayload","description":"essence(): Essence"},"libraries/java/api/TransactionReattachmentEvent":{"id":"libraries/java/api/TransactionReattachmentEvent","title":"TransactionReattachmentEvent","description":"Transaction reattachment event data."},"libraries/java/api/Transfer":{"id":"libraries/java/api/Transfer","title":"Transfer","description":"builder(address, amount, output_kind): TransferBuilder"},"libraries/java/api/TransferBuilder":{"id":"libraries/java/api/TransferBuilder","title":"TransferBuilder","description":"TransferBuilder(address, amount, output_kind): TransferBuilder"},"libraries/java/api/TransferOutput":{"id":"libraries/java/api/TransferOutput","title":"TransferOutput","description":"Transfer output."},"libraries/java/api/TransferProgress":{"id":"libraries/java/api/TransferProgress","title":"TransferProgress","description":"Type container for handling the different TransferProgress events."},"libraries/java/api/TransferProgressListener":{"id":"libraries/java/api/TransferProgressListener","title":"TransferProgressListener","description":"onTransferProgress(event): void"},"libraries/java/api/TransferProgressType":{"id":"libraries/java/api/TransferProgressType","title":"TransferProgressType","description":"Transfer event data."},"libraries/java/api/TreasuryInput":{"id":"libraries/java/api/TreasuryInput","title":"TreasuryInput","description":"TreasuryInput is an input which references a milestone which generated a TreasuryOutput."},"libraries/java/api/TreasuryOutput":{"id":"libraries/java/api/TreasuryOutput","title":"TreasuryOutput","description":"from(amount): TreasuryOutput"},"libraries/java/api/TreasuryPayload":{"id":"libraries/java/api/TreasuryPayload","title":"TreasuryPayload","description":"output(): TreasuryOutput"},"libraries/java/api/UnlockBlock":{"id":"libraries/java/api/UnlockBlock","title":"UnlockBlock","description":"kind(): UnlockBlockKind"},"libraries/java/api/UnlockBlockKind":{"id":"libraries/java/api/UnlockBlockKind","title":"UnlockBlockKind","description":"ED25519"},"libraries/java/api/UtxoInput":{"id":"libraries/java/api/UtxoInput","title":"UtxoInput","description":"Represents an input referencing an output."},"libraries/java/api/Value":{"id":"libraries/java/api/Value","title":"Value","description":"Value(value, unit): Value"},"libraries/java/api/ValueUnit":{"id":"libraries/java/api/ValueUnit","title":"ValueUnit","description":"I"},"libraries/java/api/WalletException":{"id":"libraries/java/api/WalletException","title":"WalletException","description":"WalletException(): WalletException"},"libraries/java/api/WalletTransferProgress":{"id":"libraries/java/api/WalletTransferProgress","title":"WalletTransferProgress","description":"accountId(): String"},"libraries/java/examples":{"id":"libraries/java/examples","title":"Examples","description":"The Official IOTA Wallet Library Java API examples.","sidebar":"docs"},"libraries/java/getting_started":{"id":"libraries/java/getting_started","title":"Getting Started with Java","description":"Getting started with the official IOTA Wallet Library Java binding.","sidebar":"docs"},"libraries/nodejs/api_reference":{"id":"libraries/nodejs/api_reference","title":"API Reference","description":"Official IOTA Wallet Library Software Node.js API reference.","sidebar":"docs"},"libraries/nodejs/examples":{"id":"libraries/nodejs/examples","title":"Examples","description":"Official IOTA Wallet Library Software Node.js examples.","sidebar":"docs"},"libraries/nodejs/getting_started":{"id":"libraries/nodejs/getting_started","title":"Getting Started with Node.js","description":"Getting started with the official IOTA Wallet Library Software Node.js binding.","sidebar":"docs"},"libraries/overview":{"id":"libraries/overview","title":"IOTA Wallet Libraries","description":"The `wallet.rs` library is written in Rust. You can also find three bindings written in Node.js, Python, and Java.","sidebar":"docs"},"libraries/python/api_reference":{"id":"libraries/python/api_reference","title":"API Reference","description":"Official IOTA Wallet Library Software Python API reference.","sidebar":"docs"},"libraries/python/examples":{"id":"libraries/python/examples","title":"Examples","description":"Official IOTA Wallet Library Software Python examples.","sidebar":"docs"},"libraries/python/getting_started":{"id":"libraries/python/getting_started","title":"Getting Started with IOTA Wallet Python Binding","description":"Getting started with the official IOTA Wallet Library Software Python binding.","sidebar":"docs"},"libraries/rust/api_reference":{"id":"libraries/rust/api_reference","title":"API Reference","description":"Official IOTA Wallet Library Software Rust API reference.","sidebar":"docs"},"libraries/rust/examples":{"id":"libraries/rust/examples","title":"Examples","description":"Official IOTA Wallet Library Software Rust examples.","sidebar":"docs"},"libraries/rust/getting_started":{"id":"libraries/rust/getting_started","title":"Getting Started with Rust","description":"Getting started with the official IOTA Wallet Library Software Rust library.","sidebar":"docs"},"overview":{"id":"overview","title":"Overview","description":"The wallet library is a stateful package with a standardized interface for developers to build applications involving IOTA value transactions.","sidebar":"docs"},"specification":{"id":"specification","title":"Wallet Library Spec","description":"The wallet.rs library is a stateful package with a standardized interface to build applications with IOTA value transactions.","sidebar":"docs"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting","description":"Troubleshooting the IOTA Wallet Library.","sidebar":"docs"},"welcome":{"id":"welcome","title":"Welcome","description":"The official IOTA Wallet Library Software can be used to integrate an IOTA Wallet into your application.","sidebar":"docs"}}}')}}]);